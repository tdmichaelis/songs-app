{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","renderSongList","props","songs","map","s","idx","className","key","onClick","selectSong","title","this","React","Component","connect","state","selectedSong","song","type","payload","duration","band","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"gPAIMA,E,4MAEJC,eAAiB,WACf,OAAO,EAAKC,MAAMC,MAAMC,KAAI,SAACC,EAAGC,GAC9B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,GACzB,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,YAAYE,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAAhE,WAEF,yBAAKE,UAAU,WACZF,EAAEM,Y,uDAQX,OACE,yBAAKJ,UAAU,qBACZK,KAAKX,sB,GApBSY,IAAMC,WAiCdC,eAPS,SAACC,GACvB,MAAO,CACLb,MAAOa,EAAMb,MACbc,aAAcD,EAAMC,gBAIgB,CACtCP,WCtCwB,SAAAQ,GACxB,MAAO,CACLC,KAAM,gBACNC,QAAS,CACPF,WDiCSH,CAEZf,GEbYe,eANS,SAACC,GACvB,MAAO,CACLC,aAAcD,EAAMC,gBAITF,EAvBI,SAAAb,GACjB,IAAIgB,EAAOhB,EAAMe,cAAgB,GACjC,OACE,yBAAKV,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UAAUW,EAAKP,OAC9B,yBAAKJ,UAAU,QAAQW,EAAKG,UAC5B,yBAAKd,UAAU,eACZW,EAAKI,YCEHC,G,MATH,WACV,OACE,yBAAKhB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCUSiB,cAAgB,CAC7BrB,MAlBmB,WACnB,MAAO,CACL,CAAEQ,MAAO,QAASW,KAAM,UAAWD,SAAU,QAC7C,CAAEV,MAAO,cAAeW,KAAM,YAAaD,SAAU,QACrD,CAAEV,MAAO,SAAUW,KAAM,SAAUD,SAAU,QAC7C,CAAEV,MAAO,UAAWW,KAAM,cAAeD,SAAU,QACnD,CAAEV,MAAO,YAAaW,KAAM,OAAQD,SAAU,UAahDJ,aAT0B,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMQ,EAAW,uCACzD,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAAQF,KAEjBD,KCRTS,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.a0bf19dd.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectSong } from '../actions'\n\nclass SongList extends React.Component {\n\n  renderSongList = () => {\n    return this.props.songs.map((s, idx) => {\n      return (\n        <div className=\"item\" key={idx}>\n          <div className=\"right floated content\">\n            <div className=\"ui button\" onClick={() => this.props.selectSong(s)}>Select</div>\n          </div>\n          <div className=\"content\">\n            {s.title}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"ui list song-list\">\n        {this.renderSongList()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    songs: state.songs,\n    selectedSong: state.selectedSong\n  }\n}\n\nexport default connect(mapStateToProps, {\n  selectSong: selectSong\n})(SongList)","export const selectSong = song => {\n  return {\n    type: 'SONG_SELECTED',\n    payload: {\n      song\n    }\n  }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SongDetail = props => {\n  let song = props.selectedSong || {}\n  return (\n    <div className=\"ui cards\">\n      <div className=\"card\">\n        <div className=\"content\">\n          <div className=\"header\">{song.title}</div>\n          <div className=\"meta\">{song.duration}</div>\n          <div className=\"description\">\n            {song.band}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedSong: state.selectedSong\n  }\n}\n\nexport default connect(mapStateToProps)(SongDetail)","import React from 'react'\nimport SongList from './SongList'\nimport SongDetail from './SongDetail'\nimport '../styles.css'\n\nconst App = () => {\n  return (\n    <div className=\"songs-app\">\n      <SongList />\n      <SongDetail />\n    </div>\n  )\n}\n\nexport default App","import { combineReducers } from 'redux'\n\nconst songsReducer = () => {\n  return [\n    { title: 'Drive', band: 'Incubus', duration: '4:05'},\n    { title: 'Free Fallin', band: 'Tom Petty', duration: '3:45'},\n    { title: 'Undone', band: 'Weezer', duration: '5:32'},\n    { title: 'No Rain', band: 'Blind Melon', duration: '2:48'},\n    { title: 'Glycerine', band: 'Bush', duration: '6:12'}\n  ]\n}\n\nconst selectedSongReducer = (selectedSong=null, action) => {\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload.song\n  }\n  return selectedSong\n}\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)"],"sourceRoot":""}